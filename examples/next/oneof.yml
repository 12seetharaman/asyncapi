asyncapi: '2.0.0'
info:
  title: OneOf example
  version: '1.0.0'

channels:
  test:
    publish:
      $ref: '#/components/messages/testMessages'

  test2:
    subscribe:
      # Use oneOf here if different messages are published on test2 topic.
      oneOf:
        - payload:
            'application/schema+json;version=draft-07':
              $ref: "#/components/schemas/objectWithKey"
        - payload:
            'application/schema+json;version=draft-07':
              $ref: "#/components/schemas/objectWithKey2"

components:
  messages:
    testMessages:
      payload:
        'application/schema+json;version=draft-07':
          oneOf: # oneOf in payload schema
            - $ref: "#/components/schemas/objectWithKey"
            - $ref: "#/components/schemas/objectWithKey2"
    testMessage1:
      payload:
        'application/schema+json;version=draft-07':
          $ref: "#/components/schemas/objectWithKey"
    testMessage2:
      payload:
        'application/schema+json;version=draft-07':
          $ref: "#/components/schemas/objectWithKey2"

  schemas:
    objectWithKey:
      type: object
      properties:
        key:
          type: string
    objectWithKey2:
      type: object
      properties:
        key2:
          type: string
